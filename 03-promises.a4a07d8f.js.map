{"mappings":"gfACA,IAAAA,EAAAC,EAAA,SAIiC,SAAxBC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACaC,KAAKC,SAAW,GAEpCJ,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IAqB+B,SAA7BO,EAAWC,G,IAAET,EAAFS,EAAET,SAAUC,EAAZQ,EAAYR,MAC9BJ,EAAAa,OAAOC,QAAQ,uBAAwCC,OAAfZ,EAAS,QAAYY,OAANX,EAAM,M,CAGzB,SAA7BY,EAAQJ,G,IAAET,EAAFS,EAAET,SAAUC,EAAZQ,EAAYR,MAC3BJ,EAAAa,OAAOI,QAAQ,sBAAqCF,OAAfZ,EAAS,QAAYY,OAANX,EAAM,M,CArC7Cc,SAASC,cAAc,SAe/BC,iBAAiB,UAEL,SAAGC,GAEcA,EAA5BC,iBAO2C,IALE,IAA7CC,EAAeF,EAAMG,cAAcC,SACnCC,EAASC,OAAOJ,EAAaG,OAAOE,OACtCxB,EAAQuB,OAAOJ,EAAanB,MAAMwB,OAChCC,EAAOF,OAAOJ,EAAaM,KAAKD,OAE7BE,EAAI,EAAGA,GAAKJ,EAAQI,GAAK,EAChC5B,EAAc4B,EAAG1B,GAAO2B,KAAKpB,GAAYqB,MAAMhB,GAC/CZ,GAASyB,C","sources":["src/js/03-promises.js"],"sourcesContent":["// Імпорт бібліотеки повідомлень\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n//Посилання на форму\nconst formEl = document.querySelector('.form');\n//Функція створення промісу з затримкою\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n//Додаємо слухача на подію натискання кнопки\nformEl.addEventListener('submit', startPromise);\n// Функція обробки події\nfunction startPromise(event) {\n  // Заборона дій браузера за замовчуванням\n  event.preventDefault();\n  // Отримуємо введені значення в поля форми і переводимо в число\n  const elementsForm = event.currentTarget.elements;\n  const amount = Number(elementsForm.amount.value);\n  let delay = Number(elementsForm.delay.value);\n  const step = Number(elementsForm.step.value);\n  // Створюємо задану кількість промісів з урахуванням кроку\n  for (let i = 1; i <= amount; i += 1) {\n    createPromise(i, delay).then(onFullfill).catch(onError);\n    delay += step;\n  }\n}\n// Функція при задовільному виконанні промісу\nfunction onFullfill({ position, delay }) {\n  Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n}\n// Функція при незадовільному виконні промісу\nfunction onError({ position, delay }) {\n  Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","$ce04d3a99e08e73b$var$onFullfill","param","Notify","success","concat","$ce04d3a99e08e73b$var$onError","failure","document","querySelector","addEventListener","event","preventDefault","elementsForm","currentTarget","elements","amount","Number","value","step","i","then","catch"],"version":3,"file":"03-promises.a4a07d8f.js.map"}